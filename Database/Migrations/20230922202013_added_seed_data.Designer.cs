// <auto-generated />
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230922202013_added_seed_data")]
    partial class added_seed_data
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Model.Entities.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("ClassId");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            ClassId = 1,
                            ClassName = "Mathematics"
                        },
                        new
                        {
                            ClassId = 2,
                            ClassName = "Science"
                        },
                        new
                        {
                            ClassId = 3,
                            ClassName = "History"
                        },
                        new
                        {
                            ClassId = 4,
                            ClassName = "English"
                        },
                        new
                        {
                            ClassId = 5,
                            ClassName = "Physics"
                        },
                        new
                        {
                            ClassId = 6,
                            ClassName = "Biology"
                        },
                        new
                        {
                            ClassId = 7,
                            ClassName = "Chemistry"
                        },
                        new
                        {
                            ClassId = 8,
                            ClassName = "Geography"
                        },
                        new
                        {
                            ClassId = 9,
                            ClassName = "Art"
                        },
                        new
                        {
                            ClassId = 10,
                            ClassName = "Music"
                        });
                });

            modelBuilder.Entity("Model.Entities.ClassTeacher", b =>
                {
                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("ClassId", "TeacherId");

                    b.HasIndex("TeacherId");

                    b.ToTable("ClassTeachers");

                    b.HasData(
                        new
                        {
                            ClassId = 1,
                            TeacherId = 1
                        },
                        new
                        {
                            ClassId = 2,
                            TeacherId = 2
                        },
                        new
                        {
                            ClassId = 3,
                            TeacherId = 3
                        },
                        new
                        {
                            ClassId = 4,
                            TeacherId = 4
                        },
                        new
                        {
                            ClassId = 5,
                            TeacherId = 5
                        },
                        new
                        {
                            ClassId = 6,
                            TeacherId = 1
                        },
                        new
                        {
                            ClassId = 7,
                            TeacherId = 2
                        },
                        new
                        {
                            ClassId = 8,
                            TeacherId = 3
                        },
                        new
                        {
                            ClassId = 9,
                            TeacherId = 4
                        },
                        new
                        {
                            ClassId = 10,
                            TeacherId = 5
                        });
                });

            modelBuilder.Entity("Model.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("StudentId");

                    b.HasIndex("ClassId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            ClassId = 1,
                            StudentName = "John"
                        },
                        new
                        {
                            StudentId = 2,
                            ClassId = 1,
                            StudentName = "Alice"
                        },
                        new
                        {
                            StudentId = 3,
                            ClassId = 2,
                            StudentName = "Bob"
                        },
                        new
                        {
                            StudentId = 4,
                            ClassId = 2,
                            StudentName = "Eve"
                        },
                        new
                        {
                            StudentId = 5,
                            ClassId = 3,
                            StudentName = "Mike"
                        },
                        new
                        {
                            StudentId = 6,
                            ClassId = 3,
                            StudentName = "Sarah"
                        },
                        new
                        {
                            StudentId = 7,
                            ClassId = 4,
                            StudentName = "David"
                        },
                        new
                        {
                            StudentId = 8,
                            ClassId = 4,
                            StudentName = "Emily"
                        },
                        new
                        {
                            StudentId = 9,
                            ClassId = 5,
                            StudentName = "Chris"
                        },
                        new
                        {
                            StudentId = 10,
                            ClassId = 5,
                            StudentName = "Sophia"
                        });
                });

            modelBuilder.Entity("Model.Entities.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            TeacherName = "Murad Hossen"
                        },
                        new
                        {
                            TeacherId = 2,
                            TeacherName = "Hamidur Rahman"
                        },
                        new
                        {
                            TeacherId = 3,
                            TeacherName = "Rajib Sarkar"
                        },
                        new
                        {
                            TeacherId = 4,
                            TeacherName = "Mominul Islam"
                        },
                        new
                        {
                            TeacherId = 5,
                            TeacherName = "Hasan Showrav"
                        });
                });

            modelBuilder.Entity("Model.Entities.ClassTeacher", b =>
                {
                    b.HasOne("Model.Entities.Class", "Class")
                        .WithMany("ClassTeachers")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Entities.Teacher", "Teacher")
                        .WithMany("ClassTeachers")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Model.Entities.Student", b =>
                {
                    b.HasOne("Model.Entities.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("Model.Entities.Class", b =>
                {
                    b.Navigation("ClassTeachers");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Model.Entities.Teacher", b =>
                {
                    b.Navigation("ClassTeachers");
                });
#pragma warning restore 612, 618
        }
    }
}
